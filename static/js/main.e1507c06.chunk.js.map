{"version":3,"sources":["Game/Game.ts","Posenet/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["canvas","ctx","ballRadius","x","y","dx","dy","paddleHeight","paddleWidth","paddleX","rightPressed","leftPressed","brickRowCount","brickColumnCount","brickWidth","brickHeight","brickPadding","brickOffsetLeft","brickOffsetTop","score","lives","bricks","video","id","modal","hitAudio","backgroundAudio","pause","console","log","cancelAnimationFrame","init","callback","document","getElementById","Audio","process","getContext","width","height","c","r","status","imageFromPath","src","img","Image","drawBall","beginPath","drawImage","closePath","drawPaddle","drawBricks","brickX","brickY","drawScore","font","fillStyle","fillText","drawLives","backImage","drawInit","clearRect","draw","b","play","collisionDetection","Math","abs","updatePose","then","pose","keypoints","position","requestAnimationFrame","undefined","Posenet","useState","paused","setpaused","isSucceedModalVisible","setIsSucceedModalVisible","isFailModalVisible","setFailModalVisible","show","succeed","handleOk","useEffect","streaming","a","load","net","setAttribute","navigator","mediaDevices","getUserMedia","facingMode","audio","stream","srcObject","catch","err","alert","addEventListener","ev","estimateSinglePose","flipHorizontal","window","className","alt","style","backgroundColor","backgroundImage","onClick","autoplay","transform","visible","onCancel","onOk","footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e1507c06.chunk.js","sourcesContent":["import { Pose } from \"@tensorflow-models/posenet\";\r\nimport { updatePose } from \"../Posenet\";\r\nlet canvas: HTMLCanvasElement;\r\nlet ctx: CanvasRenderingContext2D;\r\nlet ballRadius: number;\r\nlet x: number;\r\nlet y: number;\r\nlet dx: number;\r\nlet dy: number;\r\nlet paddleHeight: number;\r\nlet paddleWidth: number;\r\nlet paddleX: number;\r\nlet rightPressed: boolean;\r\nlet leftPressed: boolean;\r\nlet brickRowCount: number;\r\nlet brickColumnCount: number;\r\nlet brickWidth: number;\r\nlet brickHeight: number;\r\nlet brickPadding: number;\r\nlet brickOffsetLeft: number;\r\nlet brickOffsetTop: number;\r\nlet score: number;\r\nlet lives: number;\r\nlet bricks: any[];\r\nlet video: HTMLVideoElement;\r\nlet id: number;\r\nlet interval = 33;\r\nlet modal: (succeed: boolean) => void;\r\nexport let hitAudio: HTMLAudioElement | null;\r\nexport let backgroundAudio: HTMLAudioElement | null;\r\nexport const pause = () => {\r\n  if (backgroundAudio) {\r\n    backgroundAudio.pause();\r\n  }\r\n  console.log(id);\r\n  cancelAnimationFrame(id);\r\n};\r\n\r\nexport const init = (callback: (succeed: boolean) => void) => {\r\n  modal = callback;\r\n  canvas = document.getElementById(\"myCanvas\") as HTMLCanvasElement;\r\n  video = document.getElementById(\"video\") as HTMLVideoElement;\r\n  if (!backgroundAudio) {\r\n    backgroundAudio = new Audio(process.env.PUBLIC_URL + '/Assets/BGM.mp3');\r\n  }\r\n  if (!hitAudio) {\r\n    hitAudio = new Audio(process.env.PUBLIC_URL + '/Assets/hit.wav');\r\n  }\r\n  ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n  ballRadius = 10;\r\n  x = canvas.width / 2;\r\n  y = canvas.height - 30;\r\n  dx = 2;\r\n  dy = -2;\r\n  paddleHeight = 10;\r\n  paddleWidth = 75;\r\n  paddleX = (canvas.width - paddleWidth) / 2;\r\n  rightPressed = false;\r\n  leftPressed = false;\r\n  brickRowCount = 5;\r\n  brickColumnCount = 3;\r\n  brickWidth = 75;\r\n  brickHeight = 20;\r\n  brickPadding = 10;\r\n  brickOffsetTop = 30;\r\n  brickOffsetLeft = 30;\r\n  score = 0;\r\n  lives = 1;\r\n  bricks = [];\r\n  for (var c = 0; c < brickColumnCount; c++) {\r\n    bricks[c] = [];\r\n    for (var r = 0; r < brickRowCount; r++) {\r\n      bricks[c][r] = { x: 0, y: 0, status: 1 };\r\n    }\r\n  }\r\n};\r\nconst imageFromPath = function (src: string) {\r\n  let img = new Image();\r\n  img.src = src;\r\n  return img;\r\n} \r\n\r\nfunction collisionDetection() {\r\n  for (var c = 0; c < brickColumnCount; c++) {\r\n    for (var r = 0; r < brickRowCount; r++) {\r\n      var b = bricks[c][r];\r\n      if (b.status == 1) {\r\n        if (\r\n          x > b.x &&\r\n          x < b.x + brickWidth &&\r\n          y > b.y &&\r\n          y < b.y + brickHeight\r\n        ) {\r\n          dy = -dy;\r\n          b.status = 0;\r\n          hitAudio?.play();\r\n          score++;\r\n          if (score == brickRowCount * brickColumnCount) {\r\n            modal(true);\r\n            // alert(\"YOU WIN, CONGRATS!\");\r\n            // document.location.reload();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawBall() {\r\n  ctx.beginPath();\r\n  // ctx.arc(x, y, ballRadius, 0, Math.PI * 2);\r\n  // ctx.fillStyle = \"#0095DD\";\r\n  // ctx.fill();\r\n  ctx.drawImage(imageFromPath(process.env.PUBLIC_URL + '/Assets/ball.png'), x-ballRadius, y-ballRadius);\r\n  ctx.closePath();\r\n  \r\n}\r\nfunction drawPaddle() {\r\n  ctx.beginPath();\r\n  /*ctx.rect(paddleX, canvas.height - paddleHeight, paddleWidth, paddleHeight);\r\n  console.log(paddleWidth + ' ' + paddleHeight)\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fill();*/\r\n  ctx.drawImage(imageFromPath(process.env.PUBLIC_URL + '/Assets/paddle.png'), paddleX, canvas.height - paddleHeight, paddleWidth, paddleHeight);\r\n  ctx.closePath();\r\n}\r\nfunction drawBricks() {\r\n  for (var c = 0; c < brickColumnCount; c++) {\r\n    for (var r = 0; r < brickRowCount; r++) {\r\n      if (bricks[c][r].status == 1) {\r\n        var brickX = r * (brickWidth + brickPadding) + brickOffsetLeft;\r\n        var brickY = c * (brickHeight + brickPadding) + brickOffsetTop;\r\n        bricks[c][r].x = brickX;\r\n        bricks[c][r].y = brickY;\r\n        /*ctx.beginPath();\r\n        ctx.rect(brickX, brickY, brickWidth, brickHeight);\r\n        var img = new Image();\r\n        img.src = process.env.PUBLIC_URL + '/Assets/brick1.png';\r\n        img.onload = function () {\r\n          var ptrn = ctx.createPattern(img, 'repeat') as CanvasPattern;\r\n        }\r\n        ctx.closePath();*/\r\n        ctx.drawImage(imageFromPath(process.env.PUBLIC_URL + '/Assets/brick1.png'), brickX, brickY, brickWidth, brickHeight);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction drawScore() {\r\n  ctx.font = \"16px Arial\";\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fillText(\"Score: \" + score, 8, 20);\r\n}\r\nfunction drawLives() {\r\n  ctx.font = \"16px Arial\";\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fillText(\"Lives: \" + lives, canvas.width - 65, 20);\r\n}\r\nlet backImage = new Image();\r\nbackImage.src = process.env.PUBLIC_URL + '/Assets/background.jpg';\r\nexport function drawInit() {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.drawImage(backImage, 0, 0);\r\n  drawBricks();\r\n  drawBall();\r\n  drawPaddle();\r\n  drawScore();\r\n  drawLives();\r\n}\r\nexport function draw() {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.drawImage(backImage, 0, 0);\r\n  drawBricks();\r\n  drawBall();\r\n  drawPaddle();\r\n  drawScore();\r\n  drawLives();\r\n  collisionDetection();\r\n\r\n  if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {\r\n    dx = -dx;\r\n  }\r\n  if (y + dy < ballRadius) {\r\n    dy = -dy;\r\n  } else if (y + dy > canvas.height - ballRadius) {\r\n    if (Math.abs((x + 10) - (paddleX + paddleWidth/2)) < (10 + paddleWidth)/2 && Math.abs((y + 10) - (canvas.height-paddleHeight + paddleHeight/2)) < (10 + paddleHeight)/2) {\r\n      dy = -dy;\r\n    } else {\r\n      lives--;\r\n      if (lives === 0) {\r\n        lives = 0;\r\n        // alert(\"GAME OVER\");\r\n        // document.location.reload();\r\n        \r\n        modal(false);\r\n      } else {\r\n        x = canvas.width / 2;\r\n        y = canvas.height - 30;\r\n        dx = 2;\r\n        dy = -2;\r\n        paddleX = (canvas.width - paddleWidth) / 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (rightPressed && paddleX < canvas.width - paddleWidth) {\r\n    paddleX += 7;\r\n  } else if (leftPressed && paddleX > 0) {\r\n    paddleX -= 7;\r\n  }\r\n\r\n  x += dx;\r\n  y += dy;\r\n  updatePose().then((pose) => {\r\n    if (pose.keypoints[0].score > 0.6)\r\n      paddleX =\r\n        (pose.keypoints[0].position.x / video.width) * canvas.width * 1.1;\r\n  });\r\n  id = requestAnimationFrame(draw);\r\n}\r\n","import { load, Pose } from \"@tensorflow-models/posenet\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"@tensorflow/tfjs-backend-webgl\";\r\nimport { backgroundAudio, draw, drawInit, init, pause } from \"../Game/Game\";\r\nimport { Modal } from \"antd\";\r\n\r\nlet pose: Pose | undefined = undefined;\r\nexport let updatePose: () => Promise<Pose>;\r\nexport const Posenet = () => {\r\n  const [paused, setpaused] = useState(true);\r\n  const [isSucceedModalVisible, setIsSucceedModalVisible] = useState(false);\r\n  const [isFailModalVisible, setFailModalVisible] = useState(false);\r\n  const show = (succeed: boolean) => {\r\n    if (succeed) {\r\n      setIsSucceedModalVisible(true);\r\n      return;\r\n    } else {\r\n      setFailModalVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    init(show);\r\n    pause();\r\n    setpaused(true);\r\n    setIsSucceedModalVisible(false);\r\n    setFailModalVisible(false);\r\n  };\r\n  useEffect(() => {\r\n    // The width and height of the captured photo. We will set the\r\n    // width to the value defined here, but the height will be\r\n    // calculated based on the aspect ratio of the input stream.\r\n\r\n    // |streaming| indicates whether or not we're currently streaming\r\n    // video from the camera. Obviously, we start at false.\r\n\r\n    let streaming = false;\r\n\r\n    // The various HTML elements we need to configure or control. These\r\n    // will be set by the startup() function.\r\n\r\n    async function startup_posenet() {\r\n      console.log(\"start\");\r\n      let net = await load();\r\n\r\n      let video = document.getElementById(\"video\") as HTMLVideoElement;\r\n      video.setAttribute(\"playsinline\", \"true\");\r\n      navigator.mediaDevices\r\n        .getUserMedia({ video: { facingMode: \"user\" }, audio: false })\r\n        .then(function (stream) {\r\n          video.srcObject = stream;\r\n          video.play();\r\n        })\r\n        .catch(function (err) {\r\n          console.log(\"An error occurred: \" + err);\r\n          alert(\"not supported\");\r\n        });\r\n\r\n      video.addEventListener(\r\n        \"canplay\",\r\n        function (ev) {\r\n          if (!streaming) {\r\n            console.log(\"canplay\");\r\n            streaming = true;\r\n            updatePose = async () => {\r\n              pose = await net.estimateSinglePose(video, {\r\n                flipHorizontal: true,\r\n              });\r\n              console.log(pose);\r\n              return pose;\r\n            };\r\n            init(show);\r\n            drawInit();\r\n            // console.log('start draw!');\r\n            // requestAnimationFrame(draw);\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    window.addEventListener(\"load\", startup_posenet, false);\r\n  }, []);\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"main-screen\">\r\n      <div className=\"left\"></div>\r\n      <div className=\"header\">\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/Assets/title.png\"}\r\n          width=\"90%\"\r\n          height=\"auto\"\r\n          alt=\"PoseNet 打砖块\"\r\n        />\r\n      </div>\r\n      <canvas id=\"myCanvas\" width=\"480\" height=\"320\"></canvas>\r\n      <div className=\"controls\">\r\n        <div className=\"control-buttons\">\r\n          <button\r\n            style={{\r\n              backgroundColor:'lightgray',\r\n              backgroundImage: process.env.PUBLIC_URL + \"/Assets/OKbutton.png\",\r\n            }}\r\n            onClick={() => {\r\n              if (!paused) {\r\n                pause();\r\n              } else {\r\n                if (backgroundAudio) {\r\n                  console.log(backgroundAudio);\r\n                  backgroundAudio.autoplay = true;\r\n                  backgroundAudio.play();\r\n                }\r\n                requestAnimationFrame(draw);\r\n              }\r\n              setpaused(!paused);\r\n            }}\r\n          >\r\n            {paused ? `开始` : `暂停`}\r\n          </button>\r\n        </div>\r\n        <div className=\"camera\">\r\n          <video id=\"video\" width=\"240\" style={{ transform: \"scaleX(-1)\" }}>\r\n            视频流不可用。\r\n          </video>\r\n        </div>\r\n      </div>\r\n      <div className=\"right\"></div>\r\n      <Modal\r\n        className=\"title\"\r\n        visible={isSucceedModalVisible}\r\n        onCancel={() => {\r\n          setIsSucceedModalVisible(false);\r\n        }}\r\n        onOk={handleOk}\r\n        footer={<button onClick={handleOk}>OK</button>}\r\n      >\r\n        获胜\r\n      </Modal>\r\n      <Modal\r\n        className=\"failed\"\r\n        visible={isFailModalVisible}\r\n        onCancel={() => {\r\n          setFailModalVisible(false);\r\n        }}\r\n        onOk={handleOk}\r\n        footer={<button onClick={handleOk}>OK</button>}\r\n      >\r\n        失败\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Posenet } from \"./Posenet\";\r\nimport \"antd/dist/antd.css\";\r\nfunction App() {\r\n \r\n  return (\r\n    <div className=\"App\">\r\n      <Posenet ></Posenet>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}