{"version":3,"sources":["Game/Game.ts","Game/background.jpg","Posenet/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["canvas","ctx","ballRadius","x","y","dx","dy","paddleHeight","paddleWidth","paddleX","rightPressed","leftPressed","brickRowCount","brickColumnCount","brickWidth","brickHeight","brickPadding","brickOffsetLeft","brickOffsetTop","score","lives","bricks","video","init","document","getElementById","getContext","width","height","c","r","status","addEventListener","e","backImage","Image","draw","clearRect","drawImage","brickX","brickY","beginPath","rect","fillStyle","fill","closePath","drawBricks","arc","Math","PI","font","fillText","b","alert","location","reload","collisionDetection","updatePose","then","pose","keypoints","position","requestAnimationFrame","src","background","undefined","Posenet","useEffect","streaming","a","console","log","load","net","navigator","mediaDevices","getUserMedia","audio","stream","srcObject","play","catch","err","ev","estimateSinglePose","flipHorizontal","window","className","id","style","transform","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.76672043.chunk.js","sourcesContent":["import { Pose } from \"@tensorflow-models/posenet\";\r\nimport { updatePose } from \"../Posenet\";\r\nimport background from \"./background.jpg\";\r\nlet canvas: HTMLCanvasElement;\r\nlet ctx: CanvasRenderingContext2D;\r\nlet ballRadius: number;\r\nlet x: number;\r\nlet y: number;\r\nlet dx: number;\r\nlet dy: number;\r\nlet paddleHeight: number;\r\nlet paddleWidth: number;\r\nlet paddleX: number;\r\nlet rightPressed: boolean;\r\nlet leftPressed: boolean;\r\nlet brickRowCount: number;\r\nlet brickColumnCount: number;\r\nlet brickWidth: number;\r\nlet brickHeight: number;\r\nlet brickPadding: number;\r\nlet brickOffsetLeft: number;\r\nlet brickOffsetTop: number;\r\nlet score: number;\r\nlet lives: number;\r\nlet bricks: any[];\r\nlet paused:boolean;\r\nlet video:HTMLVideoElement;\r\nexport const init = () => {\r\n  canvas = document.getElementById(\"myCanvas\") as HTMLCanvasElement;\r\n  video=document.getElementById('video') as HTMLVideoElement;\r\n  ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n  ballRadius = 10;\r\n  x = canvas.width / 2;\r\n  y = canvas.height - 30;\r\n  dx = 2;\r\n  dy = -2;\r\n  paddleHeight = 10;\r\n  paddleWidth = 75;\r\n  paddleX = (canvas.width - paddleWidth) / 2;\r\n  rightPressed = false;\r\n  leftPressed = false;\r\n  brickRowCount = 5;\r\n  brickColumnCount = 3;\r\n  brickWidth = 75;\r\n  brickHeight = 20;\r\n  brickPadding = 10;\r\n  brickOffsetTop = 30;\r\n  brickOffsetLeft = 30;\r\n  score = 0;\r\n  lives = 3;\r\n  bricks = [];\r\n  for (var c = 0; c < brickColumnCount; c++) {\r\n    bricks[c] = [];\r\n    for (var r = 0; r < brickRowCount; r++) {\r\n      bricks[c][r] = { x: 0, y: 0, status: 1 };\r\n    }\r\n  }\r\n  document.addEventListener(\"keydown\", keyDownHandler, false);\r\n  document.addEventListener(\"keyup\", keyUpHandler, false);\r\n  document.addEventListener(\"mousemove\", mouseMoveHandler, false);\r\n\r\n  function keyDownHandler(e: KeyboardEvent) {}\r\n  function keyUpHandler(e: KeyboardEvent) {}\r\n  function mouseMoveHandler(e: MouseEvent) {}\r\n};\r\nfunction collisionDetection() {\r\n  for (var c = 0; c < brickColumnCount; c++) {\r\n    for (var r = 0; r < brickRowCount; r++) {\r\n      var b = bricks[c][r];\r\n      if (b.status == 1) {\r\n        if (\r\n          x > b.x &&\r\n          x < b.x + brickWidth &&\r\n          y > b.y &&\r\n          y < b.y + brickHeight\r\n        ) {\r\n          dy = -dy;\r\n          b.status = 0;\r\n          score++;\r\n          if (score == brickRowCount * brickColumnCount) {\r\n            alert(\"YOU WIN, CONGRATS!\");\r\n            document.location.reload();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawBall() {\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, ballRadius, 0, Math.PI * 2);\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fill();\r\n  ctx.closePath();\r\n}\r\nfunction drawPaddle() {\r\n  ctx.beginPath();\r\n  ctx.rect(paddleX, canvas.height - paddleHeight, paddleWidth, paddleHeight);\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fill();\r\n  ctx.closePath();\r\n}\r\nfunction drawBricks() {\r\n  for (var c = 0; c < brickColumnCount; c++) {\r\n    for (var r = 0; r < brickRowCount; r++) {\r\n      if (bricks[c][r].status == 1) {\r\n        var brickX = r * (brickWidth + brickPadding) + brickOffsetLeft;\r\n        var brickY = c * (brickHeight + brickPadding) + brickOffsetTop;\r\n        bricks[c][r].x = brickX;\r\n        bricks[c][r].y = brickY;\r\n        ctx.beginPath();\r\n        ctx.rect(brickX, brickY, brickWidth, brickHeight);\r\n        ctx.fillStyle = \"#0095DD\";\r\n        ctx.fill();\r\n        ctx.closePath();\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction drawScore() {\r\n  ctx.font = \"16px Arial\";\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fillText(\"Score: \" + score, 8, 20);\r\n}\r\nfunction drawLives() {\r\n  ctx.font = \"16px Arial\";\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fillText(\"Lives: \" + lives, canvas.width - 65, 20);\r\n}\r\nlet backImage=new Image();\r\nbackImage.src=background;\r\nexport function draw() {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.drawImage(backImage,0,0);\r\n  drawBricks();\r\n  drawBall();\r\n  drawPaddle();\r\n  drawScore();\r\n  drawLives();\r\n  collisionDetection();\r\n\r\n  if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {\r\n    dx = -dx;\r\n  }\r\n  if (y + dy < ballRadius) {\r\n    dy = -dy;\r\n  } else if (y + dy > canvas.height - ballRadius) {\r\n    if (x > paddleX && x < paddleX + paddleWidth) {\r\n      dy = -dy;\r\n    } else {\r\n      lives--;\r\n      if (!lives) {\r\n        alert(\"GAME OVER\");\r\n        document.location.reload();\r\n      } else {\r\n        x = canvas.width / 2;\r\n        y = canvas.height - 30;\r\n        dx = 2;\r\n        dy = -2;\r\n        paddleX = (canvas.width - paddleWidth) / 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (rightPressed && paddleX < canvas.width - paddleWidth) {\r\n    paddleX += 7;\r\n  } else if (leftPressed && paddleX > 0) {\r\n    paddleX -= 7;\r\n  }\r\n\r\n  x += dx;\r\n  y += dy;\r\n  updatePose().then((pose) => {\r\n    if (pose.keypoints[0].score > 0.6)\r\n      paddleX = pose.keypoints[0].position.x /video.width*canvas.width*1.1;\r\n  });\r\n  requestAnimationFrame(draw);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background.ce91d2ae.jpg\";","import { load, Pose } from \"@tensorflow-models/posenet\";\r\nimport React, { useEffect } from \"react\";\r\nimport \"@tensorflow/tfjs-backend-webgl\";\r\nimport imgsrc from \"./images.jpg\";\r\nimport { draw, init } from \"../Game/Game\";\r\n\r\nlet pose: Pose | undefined = undefined;\r\nexport let updatePose: () => Promise<Pose>;\r\nexport const Posenet = () => {\r\n  useEffect(() => {\r\n    // The width and height of the captured photo. We will set the\r\n    // width to the value defined here, but the height will be\r\n    // calculated based on the aspect ratio of the input stream.\r\n\r\n    // |streaming| indicates whether or not we're currently streaming\r\n    // video from the camera. Obviously, we start at false.\r\n\r\n    let streaming = false;\r\n\r\n    // The various HTML elements we need to configure or control. These\r\n    // will be set by the startup() function.\r\n\r\n    async function startup_posenet() {\r\n      console.log(\"start\");\r\n      let net = await load();\r\n\r\n      let video = document.getElementById(\"video\") as HTMLVideoElement;\r\n      \r\n      navigator.mediaDevices\r\n        .getUserMedia({ video: true, audio: false })\r\n        .then(function (stream) {\r\n          video.srcObject = stream;\r\n          video.play();\r\n        })\r\n        .catch(function (err) {\r\n          console.log(\"An error occurred: \" + err);\r\n          alert('not supported');\r\n        });\r\n\r\n      video.addEventListener(\r\n        \"canplay\",\r\n        function (ev) {\r\n          if (!streaming) {\r\n            console.log(\"canplay\");\r\n            streaming = true;\r\n            updatePose = async () => {\r\n              pose = await net.estimateSinglePose(video, {\r\n                flipHorizontal: true,\r\n              });\r\n              console.log(pose);\r\n              return pose;\r\n            };\r\n            init();\r\n            draw();\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    window.addEventListener(\"load\", startup_posenet, false);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"camera\">\r\n        <video id=\"video\" width=\"240\" style={{ transform: \"scaleX(-1)\" }}>\r\n          Video stream not available.\r\n        </video>\r\n      </div>\r\n      <canvas id=\"myCanvas\" width=\"480\" height=\"320\"></canvas>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport { Posenet } from './Posenet';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Posenet></Posenet>\n     {/* <canvas className=\"zdog-canvas1\" width=\"320\" height=\"320\" style={{backgroundColor:`#fff4e8`}}></canvas>\n     <canvas className=\"zdog-canvas2\" width=\"320\" height=\"320\" style={{backgroundColor:`#fff4e8`}}></canvas> */}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}