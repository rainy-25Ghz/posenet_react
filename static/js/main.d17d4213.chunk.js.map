{"version":3,"sources":["Posenet/index.tsx","Game/Game.ts","Game/background.jpg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["updatePose","canvas","ctx","ballRadius","x","y","dx","dy","paddleHeight","paddleWidth","paddleX","rightPressed","leftPressed","brickRowCount","brickColumnCount","brickWidth","brickHeight","brickPadding","brickOffsetLeft","brickOffsetTop","score","lives","bricks","video","id","modal","hitAudio","backgroundAudio","pose","undefined","Posenet","setPaused","useState","isSucceedModalVisible","setIsSucceedModalVisible","isFailModalVisible","setFailModalVisible","show","succeed","handleOk","init","pause","useEffect","streaming","a","console","log","load","net","document","getElementById","setAttribute","navigator","mediaDevices","getUserMedia","facingMode","audio","then","stream","srcObject","play","catch","err","alert","addEventListener","ev","estimateSinglePose","flipHorizontal","drawInit","window","className","width","style","transform","height","visible","onCancel","onOk","footer","onClick","cancelAnimationFrame","callback","Audio","getContext","c","r","status","drawBall","beginPath","arc","Math","PI","fillStyle","fill","closePath","drawPaddle","rect","drawBricks","brickX","brickY","drawScore","font","fillText","drawLives","backImage","Image","clearRect","drawImage","draw","b","collisionDetection","keypoints","position","requestAnimationFrame","src","background","App","paused","setpaused","autoplay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d17d4213.chunk.js","sourcesContent":["import { load, Pose } from \"@tensorflow-models/posenet\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"@tensorflow/tfjs-backend-webgl\";\r\nimport { draw, drawInit, init, pause } from \"../Game/Game\";\r\nimport { Button, Modal } from \"antd\";\r\ninterface Props{\r\n  setPaused:(arg:boolean)=>void;\r\n}\r\nlet pose: Pose | undefined = undefined;\r\nexport let updatePose: () => Promise<Pose>;\r\nexport const Posenet = ({setPaused}:Props) => {\r\n  const [isSucceedModalVisible, setIsSucceedModalVisible] = useState(false);\r\n  const [isFailModalVisible, setFailModalVisible] = useState(false);\r\n  const show = (succeed: boolean) => {\r\n    if (succeed) {\r\n      setIsSucceedModalVisible(true);\r\n      return;\r\n    } else {\r\n      setFailModalVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    init(show);\r\n    pause();\r\n    setPaused(true);\r\n    setIsSucceedModalVisible(false);\r\n    setFailModalVisible(false);\r\n  };\r\n  useEffect(() => {\r\n    \r\n    // The width and height of the captured photo. We will set the\r\n    // width to the value defined here, but the height will be\r\n    // calculated based on the aspect ratio of the input stream.\r\n\r\n    // |streaming| indicates whether or not we're currently streaming\r\n    // video from the camera. Obviously, we start at false.\r\n\r\n    let streaming = false;\r\n\r\n    // The various HTML elements we need to configure or control. These\r\n    // will be set by the startup() function.\r\n\r\n    async function startup_posenet() {\r\n      console.log(\"start\");\r\n      let net = await load();\r\n\r\n      let video = document.getElementById(\"video\") as HTMLVideoElement;\r\n      video.setAttribute(\"playsinline\", \"true\");\r\n      navigator.mediaDevices\r\n        .getUserMedia({ video: { facingMode: \"user\" }, audio: false })\r\n        .then(function (stream) {\r\n          video.srcObject = stream;\r\n          video.play();\r\n        })\r\n        .catch(function (err) {\r\n          console.log(\"An error occurred: \" + err);\r\n          alert(\"not supported\");\r\n        });\r\n\r\n      video.addEventListener(\r\n        \"canplay\",\r\n        function (ev) {\r\n          if (!streaming) {\r\n            console.log(\"canplay\");\r\n            streaming = true;\r\n            updatePose = async () => {\r\n              pose = await net.estimateSinglePose(video, {\r\n                flipHorizontal: true,\r\n              });\r\n              console.log(pose);\r\n              return pose;\r\n            };\r\n            init(show);\r\n            drawInit();\r\n            // console.log('start draw!');\r\n            // requestAnimationFrame(draw);\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    window.addEventListener(\"load\", startup_posenet, false);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"camera\">\r\n        <video id=\"video\" width=\"240\" style={{ transform: \"scaleX(-1)\" }}>\r\n          Video stream not available.\r\n        </video>\r\n      </div>\r\n      <canvas id=\"myCanvas\" width=\"480\" height=\"320\"></canvas>\r\n      <Modal\r\n        className=\"succeed\"\r\n        visible={isSucceedModalVisible}\r\n        onCancel={() => {\r\n          setIsSucceedModalVisible(false);\r\n        }}\r\n        onOk={handleOk}\r\n        footer={<Button onClick={handleOk}>OK</Button>}\r\n      >\r\n        获胜\r\n      </Modal>\r\n      <Modal\r\n        className=\"failed\"\r\n        visible={isFailModalVisible}\r\n        onCancel={() => {\r\n          setFailModalVisible(false);\r\n        }}\r\n        onOk={handleOk}\r\n        footer={<Button onClick={handleOk}>OK</Button>}\r\n      >\r\n        失败\r\n      </Modal>\r\n      \r\n    </div>\r\n  );\r\n};\r\n","import { Pose } from \"@tensorflow-models/posenet\";\r\nimport { updatePose } from \"../Posenet\";\r\nimport background from \"./background.jpg\";\r\nlet canvas: HTMLCanvasElement;\r\nlet ctx: CanvasRenderingContext2D;\r\nlet ballRadius: number;\r\nlet x: number;\r\nlet y: number;\r\nlet dx: number;\r\nlet dy: number;\r\nlet paddleHeight: number;\r\nlet paddleWidth: number;\r\nlet paddleX: number;\r\nlet rightPressed: boolean;\r\nlet leftPressed: boolean;\r\nlet brickRowCount: number;\r\nlet brickColumnCount: number;\r\nlet brickWidth: number;\r\nlet brickHeight: number;\r\nlet brickPadding: number;\r\nlet brickOffsetLeft: number;\r\nlet brickOffsetTop: number;\r\nlet score: number;\r\nlet lives: number;\r\nlet bricks: any[];\r\nlet video: HTMLVideoElement;\r\nlet id: number;\r\nlet interval = 33;\r\nlet modal: (succeed: boolean) => void;\r\nexport let hitAudio:HTMLAudioElement | null;\r\nexport let backgroundAudio: HTMLAudioElement | null;\r\nexport const pause = () => {\r\n  if (backgroundAudio) {\r\n    backgroundAudio.pause();\r\n  }\r\n  console.log(id);\r\n  cancelAnimationFrame(id);\r\n};\r\n\r\nexport const init = (callback: (succeed: boolean) => void) => {\r\n  modal = callback;\r\n  canvas = document.getElementById(\"myCanvas\") as HTMLCanvasElement;\r\n  video = document.getElementById(\"video\") as HTMLVideoElement;\r\n  if (!backgroundAudio) {\r\n    backgroundAudio = new Audio(\"/BGM.mp3\");\r\n  }\r\n  if(!hitAudio){\r\n    hitAudio=new Audio(\"/hit.wav\");\r\n  }\r\n  ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n  ballRadius = 10;\r\n  x = canvas.width / 2;\r\n  y = canvas.height - 30;\r\n  dx = 2;\r\n  dy = -2;\r\n  paddleHeight = 10;\r\n  paddleWidth = 75;\r\n  paddleX = (canvas.width - paddleWidth) / 2;\r\n  rightPressed = false;\r\n  leftPressed = false;\r\n  brickRowCount = 5;\r\n  brickColumnCount = 3;\r\n  brickWidth = 75;\r\n  brickHeight = 20;\r\n  brickPadding = 10;\r\n  brickOffsetTop = 30;\r\n  brickOffsetLeft = 30;\r\n  score = 0;\r\n  lives = 3;\r\n  bricks = [];\r\n  for (var c = 0; c < brickColumnCount; c++) {\r\n    bricks[c] = [];\r\n    for (var r = 0; r < brickRowCount; r++) {\r\n      bricks[c][r] = { x: 0, y: 0, status: 1 };\r\n    }\r\n  }\r\n};\r\nfunction collisionDetection() {\r\n  for (var c = 0; c < brickColumnCount; c++) {\r\n    for (var r = 0; r < brickRowCount; r++) {\r\n      var b = bricks[c][r];\r\n      if (b.status == 1) {\r\n        if (\r\n          x > b.x &&\r\n          x < b.x + brickWidth &&\r\n          y > b.y &&\r\n          y < b.y + brickHeight\r\n        ) {\r\n          dy = -dy;\r\n          b.status = 0;\r\n          hitAudio?.play();\r\n          score++;\r\n          if (score == brickRowCount * brickColumnCount) {\r\n            modal(true);\r\n            // alert(\"YOU WIN, CONGRATS!\");\r\n            // document.location.reload();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawBall() {\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, ballRadius, 0, Math.PI * 2);\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fill();\r\n  ctx.closePath();\r\n}\r\nfunction drawPaddle() {\r\n  ctx.beginPath();\r\n  ctx.rect(paddleX, canvas.height - paddleHeight, paddleWidth, paddleHeight);\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fill();\r\n  ctx.closePath();\r\n}\r\nfunction drawBricks() {\r\n  for (var c = 0; c < brickColumnCount; c++) {\r\n    for (var r = 0; r < brickRowCount; r++) {\r\n      if (bricks[c][r].status == 1) {\r\n        var brickX = r * (brickWidth + brickPadding) + brickOffsetLeft;\r\n        var brickY = c * (brickHeight + brickPadding) + brickOffsetTop;\r\n        bricks[c][r].x = brickX;\r\n        bricks[c][r].y = brickY;\r\n        ctx.beginPath();\r\n        ctx.rect(brickX, brickY, brickWidth, brickHeight);\r\n        ctx.fillStyle = \"#0095DD\";\r\n        ctx.fill();\r\n        ctx.closePath();\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction drawScore() {\r\n  ctx.font = \"16px Arial\";\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fillText(\"Score: \" + score, 8, 20);\r\n}\r\nfunction drawLives() {\r\n  ctx.font = \"16px Arial\";\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fillText(\"Lives: \" + lives, canvas.width - 65, 20);\r\n}\r\nlet backImage = new Image();\r\nbackImage.src = background;\r\nexport function drawInit() {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.drawImage(backImage, 0, 0);\r\n  drawBricks();\r\n  drawBall();\r\n  drawPaddle();\r\n  drawScore();\r\n  drawLives();\r\n}\r\nexport function draw() {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.drawImage(backImage, 0, 0);\r\n  drawBricks();\r\n  drawBall();\r\n  drawPaddle();\r\n  drawScore();\r\n  drawLives();\r\n  collisionDetection();\r\n\r\n  if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {\r\n    dx = -dx;\r\n  }\r\n  if (y + dy < ballRadius) {\r\n    dy = -dy;\r\n  } else if (y + dy > canvas.height - ballRadius) {\r\n    if (x > paddleX && x < paddleX + paddleWidth) {\r\n      dy = -dy;\r\n    } else {\r\n      lives--;\r\n      if (!lives) {\r\n        // alert(\"GAME OVER\");\r\n        // document.location.reload();\r\n        modal(false);\r\n      } else {\r\n        x = canvas.width / 2;\r\n        y = canvas.height - 30;\r\n        dx = 2;\r\n        dy = -2;\r\n        paddleX = (canvas.width - paddleWidth) / 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (rightPressed && paddleX < canvas.width - paddleWidth) {\r\n    paddleX += 7;\r\n  } else if (leftPressed && paddleX > 0) {\r\n    paddleX -= 7;\r\n  }\r\n\r\n  x += dx;\r\n  y += dy;\r\n  updatePose().then((pose) => {\r\n    if (pose.keypoints[0].score > 0.6)\r\n      paddleX =\r\n        (pose.keypoints[0].position.x / video.width) * canvas.width * 1.1;\r\n  });\r\n  id = requestAnimationFrame(draw);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background.ce91d2ae.jpg\";","import { Button } from \"antd\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { backgroundAudio, draw, pause } from \"./Game/Game\";\nimport { Posenet } from \"./Posenet\";\nimport \"antd/dist/antd.css\";\nfunction App() {\n  const [paused, setpaused] = useState(true);\n  return (\n    <div className=\"App\">\n      <Posenet setPaused={setpaused}></Posenet>\n      <Button\n        onClick={() => {\n          if (!paused) {\n            pause();\n          } else {\n            if(backgroundAudio){\n              console.log(backgroundAudio)\n              backgroundAudio.autoplay=true;\n              backgroundAudio.play();\n            }\n            requestAnimationFrame(draw);\n          }\n          setpaused(!paused);\n        }}\n      >\n        {paused ? `开始` : `暂停`}\n      </Button>\n    \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}